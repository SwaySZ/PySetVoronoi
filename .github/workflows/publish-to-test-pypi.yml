name: Publish PySetVoronoi to PyPI and TestPyPI

on: 
  push:
      branches: [ci]

env:
  CIBW_BUILD: {cp,pp}3*-*
  CIBW_SKIP: *-win32 *-manylinux_i686

jobs:
  build-n-publish:
    name: Build and publish PySetVoronoi to PyPI and TestPyPI
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python: [3.7]

    steps:
    - uses: actions/checkout@v2
   
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python}}

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==1.10.0

    - name: Build wheel
      run: python -m cibuildwheel --output-dir wheelhouse


    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl
    # - name: Create Build Environment
    #   run: cmake -E make_directory ${{github.workspace}}/build

    # - name: Configure CMake for unix-like os
    #   shell: bash
    #   working-directory: ${{github.workspace}}/build
    #   run: >-
    #       cmake ${GITHUB_WORKSPACE}/src -DCMAKE_BUILD_TYPE=$BUILD_TYPE 
    #       -DPython_ADDITIONAL_VERSIONS=${{matrix.python}}

    # - name: Build
    #   working-directory: ${{github.workspace}}/build
    #   run: |
    #        make
    #        make install
    # - name: Copy to dist
    #   working-directory: ${{github.workspace}}/
    #   run: |
    #     mkdir dist
    #     cp install/lib/* dist/
    # - name: Install pypa/build
    #   run: python3 -m pip install build --user

    # - name: Build a binary wheel and a source tarball
    #   run: >-
    #     python3 -m
    #     build
    #     --sdist
    #     --wheel
    #     --outdir dist/

    
    # - name: Publish to TestPyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     user: __token__
    #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}
    #     repository_url: https://test.pypi.org/legacy/
    # - name: Publish to PyPI
    #   if: startsWith(github.ref, 'refs/tags')
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     password: ${{ secrets.PYPI_API_TOKEN }}