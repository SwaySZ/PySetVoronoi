name: Publish PySetVoronoi to PyPI and TestPyPI

on: 
  push:
      branches: [ci]


env:
  BUILD_TYPE: Release

jobs:
  build-test-lightDEM:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest] #[ubuntu-latest, macos-latest, windows-latest] # #[ubuntu-latest, macos-latest]
        python: [3.7]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python}}
        
    - uses: msys2/setup-msys2@v2
      with:
        install: make mingw-w64-x86_64-cmake mingw-w64-x86_64-clang
      if: matrix.os == 'windows-latest'

    - name: Windows
      shell: msys2 {0}
      run: |
          uname -a
      if: matrix.os == 'windows-latest'

    - name: Install system dependencies- MacOS
      run: |
          brew install Homebrew/core/libomp
        
      if: matrix.os == 'macos-latest'

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake for unix-like os
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: |
          cmake ${GITHUB_WORKSPACE}/src -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
          -DPython_ADDITIONAL_VERSIONS=${{matrix.python}}
      if: matrix.os != 'windows-latest'

    - name: Configure CMake for Win
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: |
          cmake ${GITHUB_WORKSPACE}/src -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
          -DPython_ADDITIONAL_VERSIONS=${{matrix.python}} \
          -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang \
          -G "MSYS Makefiles"
      if: matrix.os == 'windows-latest'

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: |
           make
           make install
    # - name: Install pypa/build
    #   run: python3 -m pip install build --user

    # - name: Build a binary wheel and a source tarball
    #   run: python3 -m build --wheel --outdir wheelhouse/

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        path: install/lib/*.so

    # - name: Publish to TestPyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     user: __token__
    #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}
    #     repository_url: https://test.pypi.org/legacy/
    #     packages_dir: dist/
    # - name: Publish to PyPI
    #   if: startsWith(github.ref, 'refs/tags')
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     password: ${{ secrets.PYPI_API_TOKEN }}